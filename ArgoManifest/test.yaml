# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: liatrio-deployment-api
spec:
  replicas: 1
  # Rolling replaces old pods with new ones allowing for zero downtime and availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # Ensures that there will always be a pod available
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: liatrio-app-api
  template:
    metadata:
      labels:
        app: liatrio-app-api
    spec:
      containers:
        - name: liatrio-container-api
          # GitHub actions makes sure that this is always a versioned Deployment
          image: docker.io/apptemp/liatrio:latest
          ports:
            - containerPort: 8081
          # Environmental Variables
          env:
            - name: PORT
              value: "8081"
          # Probes
          # Extra time before liveness check. Good for slow startup apps
          startupProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 10
          # Health Check. If failed, kills and restarts. Deadlock, freeze, etc
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          # Ready for traffic
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
---
# Have this in same file for less screen changing
# Namespaces in separate file for better pratices
# Namespaces needs to exist before deployment from GitHub Actions
apiVersion: v1
kind: Service
metadata:
  name: liatrio-service-api
spec:
  selector:
    app: liatrio-app-api
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: LoadBalancer